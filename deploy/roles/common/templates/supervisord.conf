; ==================================
;   Supervisor config; 
; ==================================
[unix_http_server]
file=/var/run/supervisor/supervisor.sock   ; (the path to the socket file)

[supervisord]
;logfile=/var/log/supervisord.log ; (main log file;default $CWD/supervisord.log)
logfile_maxbytes=50MB       ; (max main logfile bytes b4 rotation;default 50MB)
logfile_backups=10          ; (num of main logfile rotation backups;default 10)
loglevel=info               ; (log level;default info; others: debug,warn,trace)
pidfile=/var/run/supervisor/supervisord.pid ; (supervisord pidfile;default supervisord.pid)
nodaemon=false              ; (start in foreground if true;default false)
minfds=1024                 ; (min. avail startup file descriptors;default 1024)
minprocs=200                ; (min. avail process descriptors;default 200)

; the below section must remain in the config file for RPC
; (supervisorctl/web interface) to work, additional interfaces may be
; added by defining them in separate rpcinterface: sections
[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///var/run/supervisor/supervisor.sock ; use a unix:// URL  for a unix socket

; ==================================
;  celery worker supervisor
; ==================================

; the name of your supervisord program
[program:{{ app_name }}_celery]

; Set environment vars
environment=DJANGO_DATABASE_NAME="{{ db_name }}",DJANGO_DATABASE_USER="{{ db_user }}",DJANGO_DATABASE_PASSWORD="{{ db_password }}",DJANGO_SECRET_KEY="{{ escaped_secret_key }}",YOUTUBE_API_KEY="{{ youtube_api_key }}"

; Set full path to celery program if using virtualenv
command={{ venv_dir }}/bin/celery -A {{ app_name }} worker --loglevel=INFO

; The directory to your Django project
directory={{ app_dir }}

; If supervisord is run as the root user, switch users to this UNIX user account
; before doing any processing.
user={{ deployer_user }}

; Supervisor will start as many instances of this program as named by numprocs
numprocs=1

; Put process stdout output in this file
stdout_logfile=/var/log/celery/{{ app_name }}_worker.log

; Put process stderr output in this file
stderr_logfile=/var/log/celery/{{ app_name }}_worker.log

; If true, this program will start automatically when supervisord is started
autostart=true

; May be one of false, unexpected, or true. If false, the process will never
; be autorestarted. If unexpected, the process will be restart when the program
; exits with an exit code that is not one of the exit codes associated with this
; process’ configuration (see exitcodes). If true, the process will be
; unconditionally restarted when it exits, without regard to its exit code.
autorestart=true

; The total number of seconds which the program needs to stay running after
; a startup to consider the start successful.
startsecs=10

; Need to wait for currently executing tasks to finish at shutdown.
; Increase this if you have very long running tasks.
;stopwaitsecs = 600

; When resorting to send SIGKILL to the program to terminate it
; send SIGKILL to its whole process group instead,
; taking care of its children as well.
killasgroup=true

; if your broker is supervised, set its priority higher
; so it starts first
priority=998



; ================================
;  celery beat supervisor example
; ================================

; the name of your supervisord program
[program:{{ app_name }}_celery_beat]

; Set environment vars
environment=DJANGO_DATABASE_NAME="{{ db_name }}",DJANGO_DATABASE_USER="{{ db_user }}",DJANGO_DATABASE_PASSWORD="{{ db_password }}",DJANGO_SECRET_KEY="{{ escaped_secret_key }}",YOUTUBE_API_KEY="{{ youtube_api_key }}"

; Set full path to celery program if using virtualenv
command={{ venv_dir }}/bin/celery -A {{ app_name }} beat --loglevel=INFO

; The directory to your Django project
directory={{ app_dir }}

; If supervisord is run as the root user, switch users to this UNIX user account
; before doing any processing.
user={{ deployer_user }}

; Supervisor will start as many instances of this program as named by numprocs
numprocs=1

; Put process stdout output in this file
stdout_logfile=/var/log/celery/{{ app_name }}_beat.log

; Put process stderr output in this file
stderr_logfile=/var/log/celery/{{ app_name }}_beat.log


; If true, this program will start automatically when supervisord is started
autostart=true

; May be one of false, unexpected, or true. If false, the process will never
; be autorestarted. If unexpected, the process will be restart when the program
; exits with an exit code that is not one of the exit codes associated with this
; process’ configuration (see exitcodes). If true, the process will be
; unconditionally restarted when it exits, without regard to its exit code.
autorestart=true

; The total number of seconds which the program needs to stay running after
; a startup to consider the start successful.
startsecs=10

; if your broker is supervised, set its priority higher
; so it starts first
priority=999